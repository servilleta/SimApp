# Nginx Load Balancer Configuration for Auto-Scaling
# /etc/nginx/sites-available/monte-carlo-autoscale

upstream monte_carlo_backend {
    # Primary instance (always running)
    server 127.0.0.1:8000 weight=1 max_fails=3 fail_timeout=30s;
    
    # Secondary instance (auto-scaled)
    # This will be dynamically managed by the auto-scaler
    server 127.0.0.1:8001 weight=1 max_fails=3 fail_timeout=30s backup;
}

upstream monte_carlo_frontend {
    server 127.0.0.1:3000 weight=1;
    server 127.0.0.1:3001 weight=1 backup;
}

# Health check endpoint
server {
    listen 8080;
    server_name localhost;
    
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    location /metrics {
        proxy_pass http://monte_carlo_backend/api/metrics;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

# Main application server
server {
    listen 80;
    server_name your-domain.com;
    
    # Enable gzip compression
    gzip on;
    gzip_types text/plain application/json application/javascript text/css;
    
    # Frontend static files
    location / {
        proxy_pass http://monte_carlo_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # API endpoints with load balancing
    location /api/ {
        proxy_pass http://monte_carlo_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Increase timeout for long simulations
        proxy_read_timeout 300s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        
        # Enable sticky sessions for WebSocket connections
        ip_hash;
    }
    
    # WebSocket support for real-time updates
    location /ws/ {
        proxy_pass http://monte_carlo_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

# SSL Configuration (for production)
server {
    listen 443 ssl http2;
    server_name your-domain.com;
    
    ssl_certificate /etc/ssl/certs/monte-carlo.crt;
    ssl_certificate_key /etc/ssl/private/monte-carlo.key;
    
    # SSL optimization
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
    ssl_prefer_server_ciphers off;
    
    # Same location blocks as HTTP server
    location / {
        proxy_pass http://monte_carlo_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/ {
        proxy_pass http://monte_carlo_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        ip_hash;
    }
}







