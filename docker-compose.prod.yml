version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: montecarlo_db
      POSTGRES_USER: montecarlo_user
      POSTGRES_PASSWORD: your-secure-postgres-password-change-this
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U montecarlo_user -d montecarlo_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - /usr/local/cuda:/usr/local/cuda:ro
      - /usr/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:ro
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://montecarlo_user:your-secure-postgres-password-change-this@postgres:5432/montecarlo_db
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=false
      - ENVIRONMENT=production
      - USE_GPU=true
      - LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/lib/x86_64-linux-gnu
      - CUDA_HOME=/usr/local/cuda
      - FILE_CLEANUP_ENABLED=true
      - FILE_RETENTION_DAYS=7
      - CLEANUP_INTERVAL_HOURS=6
      - SAVED_SIMULATIONS_DIR=saved_simulations_files
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local 