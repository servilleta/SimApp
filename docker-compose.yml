version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "24678:24678"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - frontend_dist:/app/dist
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:9090/api
      - VITE_AUTH0_DOMAIN=dev-jw6k27f0v5tcgl56.eu.auth0.com
      - VITE_AUTH0_CLIENT_ID=UDXorRodTlUmgkigfaWW81Rr40gKpeAJ
      - VITE_AUTH0_AUDIENCE=https://simapp.ai/api
      - PAPERSPACE_API_KEY=fe6ccc742bb4e07d4951c11ebc360b
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    devices:
      - /dev/nvidia0:/dev/nvidia0
      - /dev/nvidiactl:/dev/nvidiactl
      - /dev/nvidia-modeset:/dev/nvidia-modeset
      - /dev/nvidia-uvm:/dev/nvidia-uvm
      - /dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./cache:/app/cache
      # Mount essential CUDA libraries for GPU access
      - /usr/lib/x86_64-linux-gnu/libcuda.so.1:/usr/lib/x86_64-linux-gnu/libcuda.so.1:ro
      - /usr/lib/x86_64-linux-gnu/libcuda.so.580.65.06:/usr/lib/x86_64-linux-gnu/libcuda.so.580.65.06:ro
      - /usr/lib/x86_64-linux-gnu/libcudart.so.11.5.117:/usr/lib/x86_64-linux-gnu/libcudart.so.11.5.117:ro
      - /usr/lib/x86_64-linux-gnu/libcudart.so.11.0:/usr/lib/x86_64-linux-gnu/libcudart.so.11.0:ro
      - /usr/lib/x86_64-linux-gnu/libcudart.so:/usr/lib/x86_64-linux-gnu/libcudart.so:ro
      # Mount NVRTC libraries (actual files, not symlinks)
      - /usr/lib/x86_64-linux-gnu/libnvrtc.so.11.5.119:/usr/lib/x86_64-linux-gnu/libnvrtc.so.11.5.119:ro
      - /usr/lib/x86_64-linux-gnu/libnvrtc-builtins.so.11.5.119:/usr/lib/x86_64-linux-gnu/libnvrtc-builtins.so.11.5.119:ro
      # Mount CURAND library for random number generation
      - /usr/lib/x86_64-linux-gnu/libcurand.so.10.2.7.107:/usr/lib/x86_64-linux-gnu/libcurand.so.10.2.7.107:ro
      # Mount CUBLAS libraries for matrix operations
      - /usr/lib/x86_64-linux-gnu/libcublas.so.11.7.4.6:/usr/lib/x86_64-linux-gnu/libcublas.so.11.7.4.6:ro
      - /usr/lib/x86_64-linux-gnu/libcublasLt.so.11.7.4.6:/usr/lib/x86_64-linux-gnu/libcublasLt.so.11.7.4.6:ro
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/montecarlo
      - REDIS_URL=redis://redis:6379/0
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - STRIPE_WEBHOOK_SECRET=whsec_sH558wHXvOrSsKPZykakA1N9I7ckhLJk
      - PAPERSPACE_API_KEY=fe6ccc742bb4e07d4951c11ebc360b
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network
      - monitoring
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  nginx:
    image: nginx:alpine
    container_name: montecarlo-nginx
    ports:
      - "9090:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend_dist:/usr/share/nginx/html:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true

  postgres:
    image: postgres:15-alpine
    container_name: montecarlo-postgres
    environment:
      POSTGRES_DB: montecarlo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: montecarlo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
      - monitoring
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:
  frontend_dist:

networks:
  app-network:
    driver: bridge
  monitoring:
    external: true
    name: monitoring_monitoring
